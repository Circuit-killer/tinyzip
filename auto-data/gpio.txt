################################################################################
##
## Filename: 	gpio.txt
##
## Project:	TinyZip, a demonstration project for the TinyFPGA B2 board
##
## Purpose:	
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2017-2018, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=gpio
@NADDR=1
@ACCESS=GPIO_ACCESS
@SLAVE.TYPE=SINGLE
@SLAVE.BUS=wb
@INT.GPIO.WIRE=gpio_int
@INT.GPIO.PIC=buspic
@NGPO=11
@NGPI=12
@TOP.PORTLIST=
		// GPIO ports
		i_gpio, o_gpio, o_led
@TOP.IODECL=
	localparam	NGPI = @$(NGPI), NGPO=@$(NGPO);
	// GPIO ports
	input		[(@$(NGPI)-1):0]	i_gpio;
	output	wire	[(@$(NGPO)-1):1]	o_gpio;
	output	wire				o_led;
@TOP.MAIN=
		i_gpio, { o_gpio, o_led }
@MAIN.PORTLIST=
		// GPIO ports
		i_gpio, o_gpio
@MAIN.IODECL=
	localparam	NGPI = @$(NGPI), NGPO=@$(NGPO);
	// GPIO ports
	input		[(NGPI-1):0]	i_gpio;
	output	wire	[(NGPO-1):0]	o_gpio;
@MAIN.INSERT=
	//
	// GPIO
	//
	// This interface should allow us to control up to 16 GPIO inputs, and
	// another 16 GPIO outputs.  The interrupt trips when any of the inputs
	// changes.  (Sorry, which input isn't (yet) selectable.)
	//
	localparam	INITIAL_GPIO = 11'h00;
	wbgpio	#(NGPI, NGPO, INITIAL_GPIO)
		gpioi(i_clk, 1'b1, (wb_stb)&&(gpio_sel), wb_we,
			wb_data, gpio_data, i_gpio, o_gpio, gpio_int);
@REGS.N=1
@REGS.0= 0 R_GPIO GPIO GPI GPO
@BDEF.DEFN=
//
// GPIO input wires
//
// GPIO output wires
//
#define	GPIO_SET(WIRE)	(((WIRE)<<16)|(WIRE))
#define	GPIO_CLR(WIRE)	 ((WIRE)<<16)
//
#define	GPIO_LED		0x000000001
//
#define	GPIO_LED_SET	GPIO_SET(GPIO_LED)
#define	GPIO_LED_CLR	GPIO_CLR(GPIO_LED)
//
@BDEF.IONAME=	i_gpio
@BDEF.IOTYPE=	unsigned
@BDEF.OSDEF=	_BOARD_HAS_GPIO
@BDEF.OSVAL=	static volatile @$.BDEF.IOTYPE *const _gpio = ((@$.BDEF.IOTYPE *)@$REGBASE);
@RTL.MAKE.GROUP=GPIO
@RTL.MAKE.FILES=wbgpio.v
